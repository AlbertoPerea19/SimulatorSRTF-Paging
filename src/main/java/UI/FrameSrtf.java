/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import com.os.finalproject.Scheduling;
import com.os.finalproject.ShortestRemaining;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael
 */
public class FrameSrtf extends javax.swing.JFrame {

    
    int cont=1;
    ShortestRemaining sr=new ShortestRemaining();
    /**
     * Creates new form SRTF
     */
    public FrameSrtf() {
        initComponents();
        DefaultTableModel mdl = (DefaultTableModel) jTableInput.getModel();
            mdl.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jPanelInput = new javax.swing.JPanel();
        jLabelInput = new javax.swing.JLabel();
        jLabelArrivalTime = new javax.swing.JLabel();
        jLabelBurstTime = new javax.swing.JLabel();
        jTextFieldArrivalTime = new javax.swing.JTextField();
        jTextFieldBurstTime = new javax.swing.JTextField();
        jButtonCreateProcess = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableInput = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableComplete = new javax.swing.JTable();
        jLabelTableProcess = new javax.swing.JLabel();
        jButtonSRTF = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jLabelAverageWaiting = new javax.swing.JLabel();
        jLabelAverageTurn = new javax.swing.JLabel();
        jLabelResultsTable = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        title.setFont(new java.awt.Font("Inter", 1, 24)); // NOI18N
        title.setText("Simulator Shortest Remaining Time First");

        jLabelInput.setFont(new java.awt.Font("Inter", 1, 18)); // NOI18N
        jLabelInput.setText("Data input");

        jLabelArrivalTime.setText("Arrival Time");

        jLabelBurstTime.setText("Burst Time");

        jButtonCreateProcess.setText("Create Process");
        jButtonCreateProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateProcessActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelInputLayout = new javax.swing.GroupLayout(jPanelInput);
        jPanelInput.setLayout(jPanelInputLayout);
        jPanelInputLayout.setHorizontalGroup(
            jPanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInputLayout.createSequentialGroup()
                .addGroup(jPanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelInputLayout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jButtonCreateProcess))
                    .addGroup(jPanelInputLayout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(jLabelInput))
                    .addGroup(jPanelInputLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelArrivalTime)
                            .addComponent(jLabelBurstTime))
                        .addGap(29, 29, 29)
                        .addGroup(jPanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldArrivalTime)
                            .addComponent(jTextFieldBurstTime))))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        jPanelInputLayout.setVerticalGroup(
            jPanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInputLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabelInput)
                .addGap(28, 28, 28)
                .addGroup(jPanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelArrivalTime)
                    .addComponent(jTextFieldArrivalTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBurstTime)
                    .addComponent(jTextFieldBurstTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jButtonCreateProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        jTableInput.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Arrival Time", "Burst Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableInput);
        if (jTableInput.getColumnModel().getColumnCount() > 0) {
            jTableInput.getColumnModel().getColumn(0).setResizable(false);
            jTableInput.getColumnModel().getColumn(1).setResizable(false);
            jTableInput.getColumnModel().getColumn(2).setResizable(false);
            jTableInput.getColumnModel().getColumn(3).setResizable(false);
        }

        jTableComplete.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Arrival Time", "Burst Time", "Frames", "Waiting Time", "Turnaround Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableComplete);
        if (jTableComplete.getColumnModel().getColumnCount() > 0) {
            jTableComplete.getColumnModel().getColumn(0).setResizable(false);
            jTableComplete.getColumnModel().getColumn(1).setResizable(false);
            jTableComplete.getColumnModel().getColumn(2).setResizable(false);
            jTableComplete.getColumnModel().getColumn(3).setResizable(false);
            jTableComplete.getColumnModel().getColumn(4).setResizable(false);
            jTableComplete.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabelTableProcess.setFont(new java.awt.Font("Inter", 1, 18)); // NOI18N
        jLabelTableProcess.setText("Process Table");

        jButtonSRTF.setText("Start");
        jButtonSRTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSRTFActionPerformed(evt);
            }
        });

        jButtonClear.setText("Clear all");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jLabelAverageWaiting.setText("Average waiting time =");

        jLabelAverageTurn.setText("Average turn around time =");

        jLabelResultsTable.setFont(new java.awt.Font("Inter", 1, 18)); // NOI18N
        jLabelResultsTable.setText("Results table");

        jLabel1.setFont(new java.awt.Font("Inter", 1, 22)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Windows 9");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(267, 267, 267)
                .addComponent(title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jButtonClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSRTF, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(502, 502, 502)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelAverageWaiting)
                    .addComponent(jLabelAverageTurn))
                .addGap(91, 91, 91))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanelInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jLabelTableProcess)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelResultsTable)
                        .addGap(284, 284, 284))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(title)
                        .addGap(29, 29, 29)
                        .addComponent(jPanelInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabelTableProcess))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelResultsTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSRTF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(30, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelAverageWaiting)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelAverageTurn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(17, 17, 17))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCreateProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateProcessActionPerformed
        // TODO add your handling code here:
        int pId=cont;
        String pName= "P"+cont;
        //validacion de entrada de datos
        if("".equals(this.jTextFieldArrivalTime.getText()) ||"".equals(this.jTextFieldBurstTime.getText())){
        JOptionPane.showMessageDialog(null, "Ingrese valores no negativos, por favor vuelva a intentarlo");
       }else{
            int arrivalTime=Integer.parseInt(this.jTextFieldArrivalTime.getText());
            int burstTime=Integer.parseInt(this.jTextFieldBurstTime.getText());
            if(arrivalTime>=0 && burstTime>0){
                Scheduling sc= new Scheduling(pId,pName,arrivalTime,burstTime);
                DefaultTableModel mdl = (DefaultTableModel) jTableInput.getModel();
                mdl.addRow(new Object[]{sc.getId(),sc.getName(),sc.getArrivalTime(),sc.getBurstTime()});
                cont++;
            }else{
                JOptionPane.showMessageDialog(null, "Ingrese valores no negativos, por favor vuelva a intentarlo");

            }
        }
        jTextFieldArrivalTime.setText("");
        jTextFieldBurstTime.setText("");
    }//GEN-LAST:event_jButtonCreateProcessActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        // TODO add your handling code here:
        //limpiar tabla
        DefaultTableModel mdl = (DefaultTableModel) jTableInput.getModel();
        mdl.setRowCount(0);
        cont=1;
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButtonSRTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSRTFActionPerformed
        // TODO add your handling code here:
        List<Scheduling> list= new ArrayList<>();
        List<Scheduling> listComplete= new ArrayList<>();
        
        DefaultTableModel mdl = (DefaultTableModel) jTableInput.getModel();
        //Obtencion valores de la tabla
        for (int i = 0; i < mdl.getRowCount(); i++) {
            int pId = (int) mdl.getValueAt(i, 0);
            String pName = (String) mdl.getValueAt(i, 1);
            int arrivalTime = (int) mdl.getValueAt(i, 2);
            int burstTime = (int) mdl.getValueAt(i, 3);
            Scheduling sc = new Scheduling(pId,pName,arrivalTime,burstTime);
            list.add(sc);
            listComplete.add(sc);
        }
        
        
        try{
            
            sr.implementation(list);
            //imprimir los promedios
            jLabelAverageWaiting.setText("Average waiting time = "+sr.getTotalwt());
            jLabelAverageTurn.setText("Average turn around time = "+sr.getTotaltat());
            
        }catch(Exception e){
             System.out.println("Fail to complete the task=>");           
        }
        DefaultTableModel mdlComplete = (DefaultTableModel) jTableComplete.getModel();
        mdlComplete.setRowCount(0);
        //insertar datos obtenidos en la tabla
        for (int i = 0; i < listComplete.size(); i++) {
            Scheduling sc = listComplete.get(i);
            mdlComplete.addRow(new Object[]{sc.getName(),sc.getArrivalTime(),sc.getBurstTime(),sc.getcountPages(),sc.getWaitingTime(),sc.getTurnaroundTime()});
            
        }
        
        
        
        
        
    }//GEN-LAST:event_jButtonSRTFActionPerformed


    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameSrtf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameSrtf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameSrtf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameSrtf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameSrtf().setVisible(true);
            }
        });
        
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonCreateProcess;
    private javax.swing.JButton jButtonSRTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelArrivalTime;
    private javax.swing.JLabel jLabelAverageTurn;
    private javax.swing.JLabel jLabelAverageWaiting;
    private javax.swing.JLabel jLabelBurstTime;
    private javax.swing.JLabel jLabelInput;
    private javax.swing.JLabel jLabelResultsTable;
    private javax.swing.JLabel jLabelTableProcess;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelInput;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableComplete;
    private javax.swing.JTable jTableInput;
    private javax.swing.JTextField jTextFieldArrivalTime;
    private javax.swing.JTextField jTextFieldBurstTime;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
